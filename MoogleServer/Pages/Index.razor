@page "/"
@inject IWebHostEnvironment WebHostEnvironment
@inject IJSRuntime JSRuntime
@using System.Diagnostics;
@using Microsoft.AspNetCore.Components;
@inject NavigationManager NavigationManager

<PageTitle>Moogle!</PageTitle>

<button type="default" class="BG" @onclick="ChangeBG"> <img src="images/config.png" alt="Change Background"> </button>

<div class="Searching"> 

    <img class="MoogLogo" src="images/MoogleLogo.png" alt="Beautiful_Moogle_Logo" width="500" height="150" @onmouseover="(() => AnimateImage(true))" @onmouseout="(() => AnimateImage(false))" style="@imageStyle"/>
    
    <h1></h1>
    
    <img class="MiniMoogLogo" src="images/Logazs.png" alt="Beautiful_Moogle_Logo"/>
    
    <div class="SearchBar">
    <input class="SearchBox" @bind="query" @onkeyup="HandleKeyUp" placeholder="Let's search with Moogle!">
    <button type="default" class="SearchButton" @onclick="RunQuery"> <img src="images/Magnifying Glass.png" alt="Glassy"></button>
    </div>
    @if (!string.IsNullOrEmpty(result.Suggestion)) {
    <div class="suggestion">
        <p>Did you mean <strong><a href="#">@result.Suggestion</a></strong>?</p>
        <p>Se encontraron @item_q resultado(s) en un total de @time ms</p>
    </div>
}
</div>
<h1></h1>
<div class="background-image"></div>
<h6></h6>
<ul class="results">
@foreach (var item in result.Items()) {
    <li>
        <div class="fade-in-animation">
            <p class="title" ><u>@item.Title</u></p>
            <p>-->  @item.Snippet ..</p>
            <p>-->  @item.Score ...</p>
        </div>
    </li>
}
</ul>

@code {
    private string query = "";
    private SearchResult result = new SearchResult();
    private float time;
    private int item_q;
    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if(e.Key == "Enter" || e.Key == "enter"){
            RunQuery();
        }
    }
    private void RunQuery(){
        Moogle.Timer.Start();
        Relocate();
        result = Moogle.Query(query);
        time = Moogle.Timer.ElapsedMilliseconds;
        Moogle.Timer.Reset();
        item_q = Moogle.item_q;
    }
    //Animate Logo
    bool isHovered = false;
    string imageStyle = "";
    string BackG = "DarkWP";

    void AnimateImage(bool hovered){
        isHovered = hovered;
        imageStyle = isHovered ? "transform: scale(1.1); transition: transform 0.3s ease;" : "transform: scale(1); transition: transform 0.3s ease;";
    }
    //ChangeLayout
    private void Relocate()
    {
        JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.style.setProperty('--SearchingBoxTop', '{"-7rem"}'); document.documentElement.style.setProperty('--SearchingBoxLeft', '{"10rem"}'), document.documentElement.style.setProperty('--SearchingBoxPosition', '{"fixed"}')");
        JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.style.setProperty('--mooglelogo_opacity', '{"0"}'); document.documentElement.style.setProperty('--mini_mooglelogo_opacity', '{"100%"}')");

    }
    //ChangeBG
    private void ChangeBG()
    {
        if (BackG == "DarkWP")
        {
            JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.style.setProperty('--Background', '{"#1e2028"}')");
            BackG = "Solid";
        }
        else if (BackG == "Solid")
        {  
            JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.style.setProperty('--Background', '{"#fff"}'); document.documentElement.style.setProperty('--Letteras', '{"#000000"}'); document.documentElement.style.setProperty('--SearchBoxBackGround', '{"#5c5c5f70"}'); document.documentElement.style.setProperty('--SearchBoxBorder', '{"2"}'); document.documentElement.style.setProperty('--SearchBoxBorderColor', '{"#000"}'); document.documentElement.style.setProperty('--MoogBackGColor', '{"#3b3f4d80"}')");
            BackG = "Light";  
        }
        else if (BackG == "Light")
        {  
            JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.style.setProperty('--Background', '{"var(--WallpaperGround)"}'); document.documentElement.style.setProperty('--Letteras', '{"#fff"}'); document.documentElement.style.setProperty('--SearchBoxBackGround', '{"#242731"}'); document.documentElement.style.setProperty('--SearchBoxBorder', '{"0"}'); document.documentElement.style.setProperty('--SearchBoxBorderColor', '{"0"}'); document.documentElement.style.setProperty('--MoogBackGColor', '{"#3b3f4d00"}')");
            BackG = "DarkWP";  
        }  
    }
}
